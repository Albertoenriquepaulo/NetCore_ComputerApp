@model ComputerApp.ViewModels.BuildComputerEditVM

@{
    ViewData["Title"] = "BuildComputerEdit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Edit your computer components</h1>

<h4>CType</h4>
<hr />
<div>
    <div class="row">
        <div class="col-md-4">
            <form asp-action="BuildComputerEdit">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <input type="hidden" asp-for="@Model.ComputerId" />
                @foreach (var item in Model.ComponentTypes)
                {
                    string CName = @item.Name;
                    switch (CName)
                    {
                        case "CPU":
                            CName = "Processor";
                            break;
                        case "RAM":
                            CName = "Memory";
                            break;
                        default:
                            break;
                    }
                    <h5>@CName *</h5>
                    <div class="form-group">
                        @switch (CName)
                        {
                            case "Disco Duro":
                                CName = "hddId";
                                break;
                            case "Sistema Operativo":
                                CName = "OSId";
                                break;
                            default:
                                CName += "Id";
                                break;
                        }

                        <select class="custom-select" name="@CName">
                            <option selected>Open this select menu</option>
                            @foreach (var subItem in item.Components)
                            {
                                if (Model.Components.Any(x => x.ComponentId == subItem.Id))
                                {
                                    <option value="@subItem.Id" price="@subItem.Price" selected>@subItem.Name [+@string.Format("€{0:N2}", subItem.Price)]</option>
                                }
                                else
                                {
                                    <option value="@subItem.Id" price="@subItem.Price">@subItem.Name [+@string.Format("€{0:N2}", subItem.Price)]</option>
                                }
                            }

                        </select>
                        @*<select class="custom-select" name="@CName" asp-items="@(new SelectList(item.Components,"Id","Name"))">
                                <option>Please select one</option>
                            </select>*@
                    </div>
                }
                <p id="total-price">Total Price: </p>
                <div class="form-group">
                    <input type="submit" value="Add to Cart" class="btn btn-primary" />
                </div>
            </form>
        </div>
    </div>
</div>

@*<div class="row">
        <div class="col-md-4">
            <form asp-action="BuildComputerEdit">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <input type="hidden" asp-for="Id" />
                <div class="form-group">
                    <label asp-for="Name" class="control-label"></label>
                    <input asp-for="Name" class="form-control" />
                    <span asp-validation-for="Name" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <input type="submit" value="Save" class="btn btn-primary" />
                </div>
            </form>
        </div>
    </div>*@

<div>
    <a asp-action="Index">Back to List</a>
</div>

@*@section Scripts {
        @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    }*@


@section Scripts
{
    <script src="~/js/BuildComputer.js"></script>
}
