@using Microsoft.AspNetCore.Identity
@using ComputerApp.ViewModels;
@model IEnumerable<ComputerApp.ViewModels.ComputerVM>
@inject UserManager<AppUser> UserManager
@inject SignInManager<AppUser> SignInManager

@{
    ViewData["Title"] = "Index";
}

    <h1 class="text-center">Shopping cart</h1>

@*<p>
    <a asp-action="Create">Create New</a>
    <a asp-action="BuildComputer">Build your own computer</a>
</p>*@

<table class="table">
    <thead>
        <tr>
            <th>
                @*@Html.DisplayNameFor(model => model.ImgUrl)*@
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Products)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Qty)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TotalPrice)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @if (Model.Count() > 0)
        {
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        <img src=@Html.DisplayFor(modelItem => item.ImgUrl) width="200" alt="Alternate Text" />
                    </td>
                    <td>
                        @foreach (var computer in (List<Computer>)ViewData["myList"])
                        {
                            if (item.ComputerId == computer.Id)
                            {
                                <p><strong>@computer.Name</strong></p>
                            }
                        }
                        @foreach (string product in item.Products)
                        {
                            <p style="line-height: 30%;">@product</p>
                        }
                        @*@Html.DisplayFor(modelItem => item.Products)*@

                    </td>
                    <td>
                        @string.Format("€{0:N2}", item.Price)
                        @*@Html.DisplayFor(modelItem => item.Price)*@
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Qty)
                    </td>
                    <td>
                        @string.Format("€{0:N2}", item.TotalPrice)
                        @*@Html.DisplayFor(modelItem => item.TotalPrice)*@
                    </td>
                    <td>
                        <div>
                            @if (item.Products.Count == 0)
                            {
                                <a class="btn btn-outline-danger" asp-action="Delete" asp-route-id="@item.ComputerId"><i class="far fa-trash-alt"></i></a>
                            }
                            else
                            {
                                <a class="btn btn-outline-primary" asp-action="BuildComputerEdit" asp-route-id="@item.ComputerId"><i class="fas fa-edit"></i></a>
                                <a class="btn btn-outline-info" asp-action="Details" asp-route-id="@item.ComputerId"><i class="fas fa-info-circle"></i></a>
                                <a class="btn btn-outline-danger" asp-action="Delete" asp-route-id="@item.ComputerId"><i class="far fa-trash-alt"></i></a>

                            }
                        </div>
                    </td>
                </tr>

            }
        }

    </tbody>
</table>
<hr />
<p class="text-right">
    <strong>Total Price:</strong>&nbsp;&nbsp;@ViewData["totalPrice"]
</p>
<hr />
<div style="display:flex;justify-content: flex-end;">
    <a class="btn btn-outline-primary" asp-action="BuildComputerEdit" asp-route-id="" ><i class="fas fa-euro-sign"></i>&nbsp;&nbsp;Check Out</a>
</div>